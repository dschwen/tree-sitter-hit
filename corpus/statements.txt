========================
Global variable (number)
========================

test = 3

---

(source_file
  (parameter_definition
    (parameter_name) (parameter_value)))

===============================
Global variable (quoted string)
===============================

test = 'x + y'

---

(source_file
  (parameter_definition
    (parameter_name) (parameter_value)))

======================================
Global variable (double quoted string)
======================================

test = "x + y"

---

(source_file
  (parameter_definition
    (parameter_name) (parameter_value)))

===============================
Global variable (quotes nested)
===============================

test = "he's the bee's knees"

---

(source_file
  (parameter_definition
    (parameter_name) (parameter_value)))

===================================
Global variable (multi-line string)
===================================

test = '11  12
        21  22'

---

(source_file
  (parameter_definition
    (parameter_name) (parameter_value)))

===============================
Top level block with parameters
===============================

[first]
  one = 1
  two =2
[]

---

(source_file
  (top_block
    (block_path)
    (parameter_definition (parameter_name) (parameter_value))
    (parameter_definition (parameter_name) (parameter_value))))

===============
Sub-block (old)
===============

[first]
  [./second]
  [../]
[]

---

(source_file
  (top_block
    (block_path)
    (block
      (block_path)
    )
  )
)


===============
Sub-block (new)
===============

[first]
  [second]
  []
[]

---

(source_file
  (top_block
    (block_path)
      (block
        (block_path)
      )
  )
)

==================
Subblock (invalid)
==================

[first]
  [second]
[]

---

(source_file
  (top_block
    (block_path)
    (block (block_path))
      (MISSING "[]")))

=============================
Sub-block and parameter paths
=============================

[first/second]
  [third]
    fourth/fifth = true
  []
[]

---

(source_file
  (top_block
    (block_path)
    (block
      (block_path)
      (parameter_definition (parameter_name) (parameter_value))
    )))

====================================
Two top level blocks with parameters
====================================

[first]
  one = 1
  two =2
[]

[second]
  three = 1
  four =2
[]

---

(source_file
  (top_block
    (block_path)
    (parameter_definition (parameter_name) (parameter_value))
    (parameter_definition (parameter_name) (parameter_value))
  )
  (top_block
    (block_path)
    (parameter_definition (parameter_name) (parameter_value))
    (parameter_definition (parameter_name) (parameter_value))
  )
)

==============================================
Two top level blocks with incomplete parameter
==============================================

[first]
  one =
[]

[second]
  three = 1
[]

---

(source_file
  (top_block
    (block_path)
    (parameter_definition (parameter_name) (parameter_value (MISSING "_string_token1")))
  )
  (top_block
    (block_path)
    (parameter_definition (parameter_name) (parameter_value))
  )
)

============================================
Incomplete parameter followed by a parameter
============================================

[first]
  one =
  two = three
[]

---

(source_file
  (top_block
    (block_path)
    (parameter_definition (parameter_name) (parameter_value))
    (parameter_definition (parameter_name  (MISSING _path)) (parameter_value))
  )
)

==================================
Comment after parameter/value pair
==================================

test = 'x + y' # a cool expression

---

(source_file
(parameter_definition
  (parameter_name) (parameter_value)))

===========================
Nested blocks with comments
===========================

#
# Header
#

# a block
[first]
  one = 1
  two =2
  # end of block
[]

# next block
[second] # comment on name
  three= 1
  four =2    # could be 'five'
[]

---

(source_file
  (top_block
    (block_path)
    (parameter_definition (parameter_name) (parameter_value))
    (parameter_definition (parameter_name) (parameter_value))
  )
  (top_block
    (block_path)
    (parameter_definition (parameter_name) (parameter_value))
    (parameter_definition (parameter_name) (parameter_value))
  )
)

==================================
Include directive no quotes
==================================

!include util.i

---

(source_file
(include_directive
  (include_path)))

==================================
Include directive quotes
==================================

!include 'util.i'

---

(source_file
(include_directive
  (include_path)))

==================================
Top nested include
==================================

[top]
  !include 'util.i'
[]

---

(source_file
  (top_block
    (block_path)
    (include_directive
      (include_path))))

==================================
Doubly nested include
==================================

[top]
  [sub]
    !include 'util.i'
  []
[]

---

(source_file
  (top_block
    (block_path)
    (block
      (block_path)
      (include_directive
        (include_path)))))
